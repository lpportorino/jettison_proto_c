/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_SER_JON_SHARED_DATA_CAMERA_HEAT_PB_H_INCLUDED
#define PB_SER_JON_SHARED_DATA_CAMERA_HEAT_PB_H_INCLUDED
#include <pb.h>
#include "jon_shared_data_types.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ser_JonGuiDataCameraHeat {
    double zoom_pos;
    ser_JonGuiDataVideoChannelHeatAGCModes agc_mode;
    ser_JonGuiDataVideoChannelHeatFilters filter;
    bool auto_focus;
    int32_t zoom_table_pos;
    int32_t zoom_table_pos_max;
    int32_t dde_level;
    bool dde_enabled;
    ser_JonGuiDataFxModeHeat fx_mode;
    double digital_zoom_level;
    double clahe_level;
} ser_JonGuiDataCameraHeat;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ser_JonGuiDataCameraHeat_init_default    {0, _ser_JonGuiDataVideoChannelHeatAGCModes_MIN, _ser_JonGuiDataVideoChannelHeatFilters_MIN, 0, 0, 0, 0, 0, _ser_JonGuiDataFxModeHeat_MIN, 0, 0}
#define ser_JonGuiDataCameraHeat_init_zero       {0, _ser_JonGuiDataVideoChannelHeatAGCModes_MIN, _ser_JonGuiDataVideoChannelHeatFilters_MIN, 0, 0, 0, 0, 0, _ser_JonGuiDataFxModeHeat_MIN, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ser_JonGuiDataCameraHeat_zoom_pos_tag    1
#define ser_JonGuiDataCameraHeat_agc_mode_tag    2
#define ser_JonGuiDataCameraHeat_filter_tag      3
#define ser_JonGuiDataCameraHeat_auto_focus_tag  4
#define ser_JonGuiDataCameraHeat_zoom_table_pos_tag 5
#define ser_JonGuiDataCameraHeat_zoom_table_pos_max_tag 6
#define ser_JonGuiDataCameraHeat_dde_level_tag   7
#define ser_JonGuiDataCameraHeat_dde_enabled_tag 8
#define ser_JonGuiDataCameraHeat_fx_mode_tag     9
#define ser_JonGuiDataCameraHeat_digital_zoom_level_tag 10
#define ser_JonGuiDataCameraHeat_clahe_level_tag 11

/* Struct field encoding specification for nanopb */
#define ser_JonGuiDataCameraHeat_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   zoom_pos,          1) \
X(a, STATIC,   SINGULAR, UENUM,    agc_mode,          2) \
X(a, STATIC,   SINGULAR, UENUM,    filter,            3) \
X(a, STATIC,   SINGULAR, BOOL,     auto_focus,        4) \
X(a, STATIC,   SINGULAR, INT32,    zoom_table_pos,    5) \
X(a, STATIC,   SINGULAR, INT32,    zoom_table_pos_max,   6) \
X(a, STATIC,   SINGULAR, INT32,    dde_level,         7) \
X(a, STATIC,   SINGULAR, BOOL,     dde_enabled,       8) \
X(a, STATIC,   SINGULAR, UENUM,    fx_mode,           9) \
X(a, STATIC,   SINGULAR, DOUBLE,   digital_zoom_level,  10) \
X(a, STATIC,   SINGULAR, DOUBLE,   clahe_level,      11)
#define ser_JonGuiDataCameraHeat_CALLBACK NULL
#define ser_JonGuiDataCameraHeat_DEFAULT NULL

extern const pb_msgdesc_t ser_JonGuiDataCameraHeat_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ser_JonGuiDataCameraHeat_fields &ser_JonGuiDataCameraHeat_msg

/* Maximum encoded size of messages (where known) */
#define SER_JON_SHARED_DATA_CAMERA_HEAT_PB_H_MAX_SIZE ser_JonGuiDataCameraHeat_size
#define ser_JonGuiDataCameraHeat_size            70

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
