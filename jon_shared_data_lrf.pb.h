/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_SER_JON_SHARED_DATA_LRF_PB_H_INCLUDED
#define PB_SER_JON_SHARED_DATA_LRF_PB_H_INCLUDED
#include <pb.h>
#include "jon_shared_data_types.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ser_RgbColor {
    uint32_t red;
    uint32_t green;
    uint32_t blue;
} ser_RgbColor;

typedef struct _ser_JonGuiDataTarget {
    int64_t timestamp;
    double target_longitude;
    double target_latitude;
    double target_altitude;
    double observer_longitude;
    double observer_latitude;
    double observer_altitude;
    double observer_azimuth;
    double observer_elevation;
    double observer_bank;
    double distance_2d;
    double distance_3b;
    ser_JonGuiDataGpsFixType observer_fix_type;
    int32_t session_id;
    int32_t target_id;
    bool has_target_color;
    ser_RgbColor target_color;
    uint32_t type;
    /* UUID as four fixed32 values (128 bits total) */
    int32_t uuid_part1;
    int32_t uuid_part2;
    int32_t uuid_part3;
    int32_t uuid_part4;
} ser_JonGuiDataTarget;

typedef struct _ser_JonGuiDataLrf {
    bool is_scanning;
    bool is_measuring;
    int32_t measure_id;
    bool has_target;
    ser_JonGuiDataTarget target;
    ser_JonGuiDatatLrfLaserPointerModes pointer_mode;
    bool fogModeEnabled;
    bool is_refining;
} ser_JonGuiDataLrf;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ser_JonGuiDataLrf_init_default           {0, 0, 0, false, ser_JonGuiDataTarget_init_default, _ser_JonGuiDatatLrfLaserPointerModes_MIN, 0, 0}
#define ser_JonGuiDataTarget_init_default        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _ser_JonGuiDataGpsFixType_MIN, 0, 0, false, ser_RgbColor_init_default, 0, 0, 0, 0, 0}
#define ser_RgbColor_init_default                {0, 0, 0}
#define ser_JonGuiDataLrf_init_zero              {0, 0, 0, false, ser_JonGuiDataTarget_init_zero, _ser_JonGuiDatatLrfLaserPointerModes_MIN, 0, 0}
#define ser_JonGuiDataTarget_init_zero           {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _ser_JonGuiDataGpsFixType_MIN, 0, 0, false, ser_RgbColor_init_zero, 0, 0, 0, 0, 0}
#define ser_RgbColor_init_zero                   {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ser_RgbColor_red_tag                     1
#define ser_RgbColor_green_tag                   2
#define ser_RgbColor_blue_tag                    3
#define ser_JonGuiDataTarget_timestamp_tag       1
#define ser_JonGuiDataTarget_target_longitude_tag 2
#define ser_JonGuiDataTarget_target_latitude_tag 3
#define ser_JonGuiDataTarget_target_altitude_tag 4
#define ser_JonGuiDataTarget_observer_longitude_tag 5
#define ser_JonGuiDataTarget_observer_latitude_tag 6
#define ser_JonGuiDataTarget_observer_altitude_tag 7
#define ser_JonGuiDataTarget_observer_azimuth_tag 8
#define ser_JonGuiDataTarget_observer_elevation_tag 9
#define ser_JonGuiDataTarget_observer_bank_tag   10
#define ser_JonGuiDataTarget_distance_2d_tag     11
#define ser_JonGuiDataTarget_distance_3b_tag     12
#define ser_JonGuiDataTarget_observer_fix_type_tag 13
#define ser_JonGuiDataTarget_session_id_tag      14
#define ser_JonGuiDataTarget_target_id_tag       15
#define ser_JonGuiDataTarget_target_color_tag    16
#define ser_JonGuiDataTarget_type_tag            17
#define ser_JonGuiDataTarget_uuid_part1_tag      18
#define ser_JonGuiDataTarget_uuid_part2_tag      19
#define ser_JonGuiDataTarget_uuid_part3_tag      20
#define ser_JonGuiDataTarget_uuid_part4_tag      21
#define ser_JonGuiDataLrf_is_scanning_tag        1
#define ser_JonGuiDataLrf_is_measuring_tag       2
#define ser_JonGuiDataLrf_measure_id_tag         3
#define ser_JonGuiDataLrf_target_tag             4
#define ser_JonGuiDataLrf_pointer_mode_tag       5
#define ser_JonGuiDataLrf_fogModeEnabled_tag     6
#define ser_JonGuiDataLrf_is_refining_tag        7

/* Struct field encoding specification for nanopb */
#define ser_JonGuiDataLrf_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     is_scanning,       1) \
X(a, STATIC,   SINGULAR, BOOL,     is_measuring,      2) \
X(a, STATIC,   SINGULAR, INT32,    measure_id,        3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  target,            4) \
X(a, STATIC,   SINGULAR, UENUM,    pointer_mode,      5) \
X(a, STATIC,   SINGULAR, BOOL,     fogModeEnabled,    6) \
X(a, STATIC,   SINGULAR, BOOL,     is_refining,       7)
#define ser_JonGuiDataLrf_CALLBACK NULL
#define ser_JonGuiDataLrf_DEFAULT NULL
#define ser_JonGuiDataLrf_target_MSGTYPE ser_JonGuiDataTarget

#define ser_JonGuiDataTarget_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    timestamp,         1) \
X(a, STATIC,   SINGULAR, DOUBLE,   target_longitude,   2) \
X(a, STATIC,   SINGULAR, DOUBLE,   target_latitude,   3) \
X(a, STATIC,   SINGULAR, DOUBLE,   target_altitude,   4) \
X(a, STATIC,   SINGULAR, DOUBLE,   observer_longitude,   5) \
X(a, STATIC,   SINGULAR, DOUBLE,   observer_latitude,   6) \
X(a, STATIC,   SINGULAR, DOUBLE,   observer_altitude,   7) \
X(a, STATIC,   SINGULAR, DOUBLE,   observer_azimuth,   8) \
X(a, STATIC,   SINGULAR, DOUBLE,   observer_elevation,   9) \
X(a, STATIC,   SINGULAR, DOUBLE,   observer_bank,    10) \
X(a, STATIC,   SINGULAR, DOUBLE,   distance_2d,      11) \
X(a, STATIC,   SINGULAR, DOUBLE,   distance_3b,      12) \
X(a, STATIC,   SINGULAR, UENUM,    observer_fix_type,  13) \
X(a, STATIC,   SINGULAR, INT32,    session_id,       14) \
X(a, STATIC,   SINGULAR, INT32,    target_id,        15) \
X(a, STATIC,   OPTIONAL, MESSAGE,  target_color,     16) \
X(a, STATIC,   SINGULAR, UINT32,   type,             17) \
X(a, STATIC,   SINGULAR, INT32,    uuid_part1,       18) \
X(a, STATIC,   SINGULAR, INT32,    uuid_part2,       19) \
X(a, STATIC,   SINGULAR, INT32,    uuid_part3,       20) \
X(a, STATIC,   SINGULAR, INT32,    uuid_part4,       21)
#define ser_JonGuiDataTarget_CALLBACK NULL
#define ser_JonGuiDataTarget_DEFAULT NULL
#define ser_JonGuiDataTarget_target_color_MSGTYPE ser_RgbColor

#define ser_RgbColor_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   red,               1) \
X(a, STATIC,   SINGULAR, UINT32,   green,             2) \
X(a, STATIC,   SINGULAR, UINT32,   blue,              3)
#define ser_RgbColor_CALLBACK NULL
#define ser_RgbColor_DEFAULT NULL

extern const pb_msgdesc_t ser_JonGuiDataLrf_msg;
extern const pb_msgdesc_t ser_JonGuiDataTarget_msg;
extern const pb_msgdesc_t ser_RgbColor_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ser_JonGuiDataLrf_fields &ser_JonGuiDataLrf_msg
#define ser_JonGuiDataTarget_fields &ser_JonGuiDataTarget_msg
#define ser_RgbColor_fields &ser_RgbColor_msg

/* Maximum encoded size of messages (where known) */
#define SER_JON_SHARED_DATA_LRF_PB_H_MAX_SIZE    ser_JonGuiDataLrf_size
#define ser_JonGuiDataLrf_size                   234
#define ser_JonGuiDataTarget_size                210
#define ser_RgbColor_size                        18

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
