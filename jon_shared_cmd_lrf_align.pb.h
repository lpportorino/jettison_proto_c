/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_CMD_LRF_CALIB_JON_SHARED_CMD_LRF_ALIGN_PB_H_INCLUDED
#define PB_CMD_LRF_CALIB_JON_SHARED_CMD_LRF_ALIGN_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _cmd_Lrf_calib_SetOffsets {
    int32_t x;
    int32_t y;
} cmd_Lrf_calib_SetOffsets;

typedef struct _cmd_Lrf_calib_ShiftOffsetsBy {
    int32_t x;
    int32_t y;
} cmd_Lrf_calib_ShiftOffsetsBy;

typedef struct _cmd_Lrf_calib_ResetOffsets {
    char dummy_field;
} cmd_Lrf_calib_ResetOffsets;

typedef struct _cmd_Lrf_calib_SaveOffsets {
    char dummy_field;
} cmd_Lrf_calib_SaveOffsets;

typedef struct _cmd_Lrf_calib_Offsets {
    pb_size_t which_cmd;
    union {
        cmd_Lrf_calib_SetOffsets set;
        cmd_Lrf_calib_SaveOffsets save;
        cmd_Lrf_calib_ResetOffsets reset;
        cmd_Lrf_calib_ShiftOffsetsBy shift;
    } cmd;
} cmd_Lrf_calib_Offsets;

typedef struct _cmd_Lrf_calib_Root {
    pb_size_t which_channel;
    union {
        cmd_Lrf_calib_Offsets day;
        cmd_Lrf_calib_Offsets heat;
    } channel;
} cmd_Lrf_calib_Root;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cmd_Lrf_calib_Root_init_default          {0, {cmd_Lrf_calib_Offsets_init_default}}
#define cmd_Lrf_calib_Offsets_init_default       {0, {cmd_Lrf_calib_SetOffsets_init_default}}
#define cmd_Lrf_calib_SetOffsets_init_default    {0, 0}
#define cmd_Lrf_calib_ShiftOffsetsBy_init_default {0, 0}
#define cmd_Lrf_calib_ResetOffsets_init_default  {0}
#define cmd_Lrf_calib_SaveOffsets_init_default   {0}
#define cmd_Lrf_calib_Root_init_zero             {0, {cmd_Lrf_calib_Offsets_init_zero}}
#define cmd_Lrf_calib_Offsets_init_zero          {0, {cmd_Lrf_calib_SetOffsets_init_zero}}
#define cmd_Lrf_calib_SetOffsets_init_zero       {0, 0}
#define cmd_Lrf_calib_ShiftOffsetsBy_init_zero   {0, 0}
#define cmd_Lrf_calib_ResetOffsets_init_zero     {0}
#define cmd_Lrf_calib_SaveOffsets_init_zero      {0}

/* Field tags (for use in manual encoding/decoding) */
#define cmd_Lrf_calib_SetOffsets_x_tag           1
#define cmd_Lrf_calib_SetOffsets_y_tag           2
#define cmd_Lrf_calib_ShiftOffsetsBy_x_tag       1
#define cmd_Lrf_calib_ShiftOffsetsBy_y_tag       2
#define cmd_Lrf_calib_Offsets_set_tag            1
#define cmd_Lrf_calib_Offsets_save_tag           2
#define cmd_Lrf_calib_Offsets_reset_tag          3
#define cmd_Lrf_calib_Offsets_shift_tag          4
#define cmd_Lrf_calib_Root_day_tag               1
#define cmd_Lrf_calib_Root_heat_tag              2

/* Struct field encoding specification for nanopb */
#define cmd_Lrf_calib_Root_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (channel,day,channel.day),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (channel,heat,channel.heat),   2)
#define cmd_Lrf_calib_Root_CALLBACK NULL
#define cmd_Lrf_calib_Root_DEFAULT NULL
#define cmd_Lrf_calib_Root_channel_day_MSGTYPE cmd_Lrf_calib_Offsets
#define cmd_Lrf_calib_Root_channel_heat_MSGTYPE cmd_Lrf_calib_Offsets

#define cmd_Lrf_calib_Offsets_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,set,cmd.set),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,save,cmd.save),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,reset,cmd.reset),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,shift,cmd.shift),   4)
#define cmd_Lrf_calib_Offsets_CALLBACK NULL
#define cmd_Lrf_calib_Offsets_DEFAULT NULL
#define cmd_Lrf_calib_Offsets_cmd_set_MSGTYPE cmd_Lrf_calib_SetOffsets
#define cmd_Lrf_calib_Offsets_cmd_save_MSGTYPE cmd_Lrf_calib_SaveOffsets
#define cmd_Lrf_calib_Offsets_cmd_reset_MSGTYPE cmd_Lrf_calib_ResetOffsets
#define cmd_Lrf_calib_Offsets_cmd_shift_MSGTYPE cmd_Lrf_calib_ShiftOffsetsBy

#define cmd_Lrf_calib_SetOffsets_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    x,                 1) \
X(a, STATIC,   SINGULAR, INT32,    y,                 2)
#define cmd_Lrf_calib_SetOffsets_CALLBACK NULL
#define cmd_Lrf_calib_SetOffsets_DEFAULT NULL

#define cmd_Lrf_calib_ShiftOffsetsBy_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    x,                 1) \
X(a, STATIC,   SINGULAR, INT32,    y,                 2)
#define cmd_Lrf_calib_ShiftOffsetsBy_CALLBACK NULL
#define cmd_Lrf_calib_ShiftOffsetsBy_DEFAULT NULL

#define cmd_Lrf_calib_ResetOffsets_FIELDLIST(X, a) \

#define cmd_Lrf_calib_ResetOffsets_CALLBACK NULL
#define cmd_Lrf_calib_ResetOffsets_DEFAULT NULL

#define cmd_Lrf_calib_SaveOffsets_FIELDLIST(X, a) \

#define cmd_Lrf_calib_SaveOffsets_CALLBACK NULL
#define cmd_Lrf_calib_SaveOffsets_DEFAULT NULL

extern const pb_msgdesc_t cmd_Lrf_calib_Root_msg;
extern const pb_msgdesc_t cmd_Lrf_calib_Offsets_msg;
extern const pb_msgdesc_t cmd_Lrf_calib_SetOffsets_msg;
extern const pb_msgdesc_t cmd_Lrf_calib_ShiftOffsetsBy_msg;
extern const pb_msgdesc_t cmd_Lrf_calib_ResetOffsets_msg;
extern const pb_msgdesc_t cmd_Lrf_calib_SaveOffsets_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cmd_Lrf_calib_Root_fields &cmd_Lrf_calib_Root_msg
#define cmd_Lrf_calib_Offsets_fields &cmd_Lrf_calib_Offsets_msg
#define cmd_Lrf_calib_SetOffsets_fields &cmd_Lrf_calib_SetOffsets_msg
#define cmd_Lrf_calib_ShiftOffsetsBy_fields &cmd_Lrf_calib_ShiftOffsetsBy_msg
#define cmd_Lrf_calib_ResetOffsets_fields &cmd_Lrf_calib_ResetOffsets_msg
#define cmd_Lrf_calib_SaveOffsets_fields &cmd_Lrf_calib_SaveOffsets_msg

/* Maximum encoded size of messages (where known) */
#define CMD_LRF_CALIB_JON_SHARED_CMD_LRF_ALIGN_PB_H_MAX_SIZE cmd_Lrf_calib_Root_size
#define cmd_Lrf_calib_Offsets_size               24
#define cmd_Lrf_calib_ResetOffsets_size          0
#define cmd_Lrf_calib_Root_size                  26
#define cmd_Lrf_calib_SaveOffsets_size           0
#define cmd_Lrf_calib_SetOffsets_size            22
#define cmd_Lrf_calib_ShiftOffsetsBy_size        22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
